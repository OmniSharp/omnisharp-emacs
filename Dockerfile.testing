FROM microsoft/dotnet:2.1-sdk

WORKDIR /usr/src

# We need mono for now as it provides msbuild-16x which is used by omnisharp-roslyn on linux for our test project
RUN apt-get update \
    && apt-get install -y apt-transport-https dirmngr gnupg ca-certificates \
    && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \
    && (echo "deb https://download.mono-project.com/repo/debian stable-stretch main" | tee /etc/apt/sources.list.d/mono-official-stable.list) \
    && apt-get update \
    && apt-get install -y git emacs24-nox wget curl make mono-devel \
    && rm -rf /var/lib/apt/lists/*

# Install Cask
RUN curl -fsSL https://raw.githubusercontent.com/cask/cask/master/go | python
ENV PATH /root/.cask/bin:$PATH

# Install sample project's dependencies
COPY test/MinimalProject test/MinimalProject
RUN (cd ./test/MinimalProject && dotnet build)

# Install omnisharp and it's dependency packages via Cask
COPY Cask Cask
COPY omnisharp*.el ./
RUN cask install

# run cask build to check if the thing compiles to byte code
RUN ! (cask build 2>&1 | tee /dev/stderr | grep -iq "^.*\\.el:.*:Error:")

# Copy other files
# COPY doc doc
# COPY features-tbd-on-the-server-side features-tbd-on-the-server-side
# COPY ignored-from-melpa-build ignored-from-melpa-build
# COPY melpa-testing.recipe melpa-testing.recipe
COPY test/*.el test/
COPY test/buttercup-tests test/buttercup-tests
COPY ignored-from-melpa-build/*.el ignored-from-melpa-build/
COPY test-stuff test-stuff
COPY .git .git

